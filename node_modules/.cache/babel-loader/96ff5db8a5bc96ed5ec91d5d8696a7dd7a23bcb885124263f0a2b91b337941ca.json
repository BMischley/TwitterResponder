{"ast":null,"code":"import _slicedToArray from\"/Users/blakemischley/Desktop/Personal_Projects/Twitter_Responder/twitter-response-generator/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Popup(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),tweet=_useState2[0],setTweet=_useState2[1];useEffect(function(){// Add a listener for messages from content script\nvar messageListener=function messageListener(message,sender,sendResponse){console.log(message);if(message.type===\"TWEET_SELECTED\"){setTweet(message.data);}else{setTweet(message.data);}};chrome.runtime.onMessage.addListener(messageListener);// Cleanup: remove the listener when the component is unmounted\nreturn function(){chrome.runtime.onMessage.removeListener(messageListener);};},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Selected Tweet:\"}),/*#__PURE__*/_jsx(\"textarea\",{readOnly:true,value:tweet})]});}export default Popup;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Popup","_useState","_useState2","_slicedToArray","tweet","setTweet","messageListener","message","sender","sendResponse","console","log","type","data","chrome","runtime","onMessage","addListener","removeListener","children","readOnly","value"],"sources":["/Users/blakemischley/Desktop/Personal_Projects/Twitter_Responder/twitter-response-generator/src/components/Popup.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Popup() {\n  const [tweet, setTweet] = useState(\"\");\n\n  useEffect(() => {\n    // Add a listener for messages from content script\n    const messageListener = (message, sender, sendResponse) => {\n        console.log(message);\n      if (message.type === \"TWEET_SELECTED\") {\n        setTweet(message.data);\n      } else {\n        setTweet(message.data);\n      }\n    };\n\n    chrome.runtime.onMessage.addListener(messageListener);\n\n    // Cleanup: remove the listener when the component is unmounted\n    return () => {\n      chrome.runtime.onMessage.removeListener(messageListener);\n    };\n  }, []);\n\n  return (\n    <div>\n      <p>Selected Tweet:</p>\n      <textarea readOnly value={tweet}></textarea>\n    </div>\n  );\n}\n\nexport default Popup;\n"],"mappings":"iLAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnD,QAAS,CAAAC,KAAKA,CAAA,CAAG,CACf,IAAAC,SAAA,CAA0BP,QAAQ,CAAC,EAAE,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/BG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IAEtBP,SAAS,CAAC,UAAM,CACd;AACA,GAAM,CAAAW,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAIC,OAAO,CAAEC,MAAM,CAAEC,YAAY,CAAK,CACvDC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC,CACtB,GAAIA,OAAO,CAACK,IAAI,GAAK,gBAAgB,CAAE,CACrCP,QAAQ,CAACE,OAAO,CAACM,IAAI,CAAC,CACxB,CAAC,IAAM,CACLR,QAAQ,CAACE,OAAO,CAACM,IAAI,CAAC,CACxB,CACF,CAAC,CAEDC,MAAM,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW,CAACX,eAAe,CAAC,CAErD;AACA,MAAO,WAAM,CACXQ,MAAM,CAACC,OAAO,CAACC,SAAS,CAACE,cAAc,CAACZ,eAAe,CAAC,CAC1D,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEP,KAAA,QAAAoB,QAAA,eACEtB,IAAA,MAAAsB,QAAA,CAAG,iBAAe,CAAG,CAAC,cACtBtB,IAAA,aAAUuB,QAAQ,MAACC,KAAK,CAAEjB,KAAM,CAAW,CAAC,EACzC,CAAC,CAEV,CAEA,cAAe,CAAAJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}